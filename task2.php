<?

task2a('01.05.1980');
task2b('01.05-1980');


function task2a($date = '01.05.1980') {

    #проверили, что бы были только цифры
    if (!preg_match('/(\d{2}.\d{2}.\d{4})$/', $date)) return false;

    #для удобства
    if (!$arr = split ('[.]', $date)) return false;

    /*$arr = array_map (function($val) {
        # запасной вариант, если убрать выше регулярку на проверку цифр, тут можно каждый элемент привести в чувства
        return intval($val);
    }, $arr);
    */

    list ($day, $month, $year) = $arr;

    #долго искал функцию, возвращающую кол-во месяцев в году
    if ((int)$month < 1 || (int)$month > 12) return false;

    #диапазон дат по желанию
    if ((int)$year < 1900 || (int)$year > 2030) return false;

    #узнали, сколько дней в этом месяце, что бы не пролететь с високосным годом
    $days = date("t", mktime(0, 0, 0, $month, 1, $year));

    if ($day < 1 && $day > $days) return false;

    echo "День: $day; Месяц: $month; Год: $year<br>\n";
    echo '<hr>';
}

function task2b($date = '01.05.1980') {

    #честно стырено, не раз выручала, високосный год понимает
    $result = preg_match('/^(((0[1-9]|[12]\d|3[01])\.(0[13578]|1[02])\.((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)\.(0[13456789]|1[012])\.((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])\.02\.((19|[2-9]\d)\d{2}))|(29\.02\.((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/',$date);
    var_dump((bool)$result);
}